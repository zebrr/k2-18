{
  "nodes": [
    {
      "id": "test:c:1",
      "type": "Chunk",
      "text": "Introduction to algorithms and complexity",
      "node_offset": 0,
      "definition": "Basic introduction to algorithmic thinking",
      "difficulty": 1,
      "degree_in": 0,
      "degree_out": 5,
      "degree_centrality": 0.2,
      "pagerank": 0.007355377597456121,
      "betweenness_centrality": 0.0,
      "out-closeness": 0.2744074410127489,
      "component_id": 0,
      "prerequisite_depth": 0,
      "learning_effort": 1.0,
      "educational_importance": 0.020412170586735404,
      "cluster_id": 0,
      "bridge_score": 0.12000000000000002,
      "concepts": [
        "concept_complexity"
      ]
    },
    {
      "id": "concept_complexity",
      "type": "Concept",
      "text": "Algorithm Complexity",
      "node_offset": 50,
      "definition": "Measure of computational resources needed",
      "degree_in": 1,
      "degree_out": 1,
      "degree_centrality": 0.08,
      "pagerank": 0.00792374772014246,
      "betweenness_centrality": 0.0,
      "out-closeness": 0.13856590849951178,
      "component_id": 0,
      "prerequisite_depth": 0,
      "learning_effort": 3.0,
      "educational_importance": 0.020412170586735404,
      "cluster_id": 2,
      "bridge_score": 0.15000000000000002,
      "concepts": []
    },
    {
      "id": "test:c:2",
      "type": "Chunk",
      "text": "Sorting algorithms overview",
      "node_offset": 100,
      "definition": "Introduction to sorting problem",
      "difficulty": 2,
      "degree_in": 2,
      "degree_out": 5,
      "degree_centrality": 0.28,
      "pagerank": 0.015552086774743238,
      "betweenness_centrality": 0.045000000000000005,
      "out-closeness": 0.16144797712325695,
      "component_id": 0,
      "prerequisite_depth": 1,
      "learning_effort": 5.0,
      "educational_importance": 0.0422237293753583,
      "cluster_id": 2,
      "bridge_score": 0.11721428571428573,
      "concepts": [
        "concept_sorting"
      ]
    },
    {
      "id": "test:c:3",
      "type": "Chunk",
      "text": "Bubble sort implementation and analysis",
      "node_offset": 200,
      "definition": "Simple quadratic sorting algorithm",
      "difficulty": 2,
      "degree_in": 4,
      "degree_out": 1,
      "degree_centrality": 0.2,
      "pagerank": 0.020917662880382038,
      "betweenness_centrality": 0.016666666666666666,
      "out-closeness": 0.051472801548054184,
      "component_id": 0,
      "prerequisite_depth": 2,
      "learning_effort": 7.0,
      "educational_importance": 0.04736938572755063,
      "cluster_id": 2,
      "bridge_score": 0.07166666666666668,
      "concepts": []
    },
    {
      "id": "concept_sorting",
      "type": "Concept",
      "text": "Sorting",
      "node_offset": 150,
      "definition": "Arranging elements in order",
      "degree_in": 1,
      "degree_out": 2,
      "degree_centrality": 0.12,
      "pagerank": 0.009007786961538757,
      "betweenness_centrality": 0.0,
      "out-closeness": 0.07281655997140352,
      "component_id": 0,
      "prerequisite_depth": 0,
      "learning_effort": 3.0,
      "educational_importance": 0.020412170586735404,
      "cluster_id": 2,
      "bridge_score": 0.1,
      "concepts": []
    },
    {
      "id": "test:c:4",
      "type": "Chunk",
      "text": "Quicksort divide-and-conquer approach",
      "node_offset": 300,
      "definition": "Efficient recursive sorting algorithm",
      "difficulty": 3,
      "degree_in": 5,
      "degree_out": 2,
      "degree_centrality": 0.28,
      "pagerank": 0.1431295442677139,
      "betweenness_centrality": 0.05166666666666667,
      "out-closeness": 0.05768674698795181,
      "component_id": 0,
      "prerequisite_depth": 0,
      "learning_effort": 3.0,
      "educational_importance": 0.052651112182936256,
      "cluster_id": 1,
      "bridge_score": 0.1861666666666667,
      "concepts": [
        "concept_recursion"
      ]
    },
    {
      "id": "concept_recursion",
      "type": "Concept",
      "text": "Recursion",
      "node_offset": 350,
      "definition": "Function calling itself with smaller input",
      "degree_in": 3,
      "degree_out": 1,
      "degree_centrality": 0.16,
      "pagerank": 0.12953707086208052,
      "betweenness_centrality": 0.025,
      "out-closeness": 0.056859394442140186,
      "component_id": 0,
      "prerequisite_depth": 0,
      "learning_effort": 3.0,
      "educational_importance": 0.037762274168594526,
      "cluster_id": 1,
      "bridge_score": 0.09250000000000001,
      "concepts": []
    },
    {
      "id": "assessment_sorting",
      "type": "Assessment",
      "text": "Compare bubble sort and quicksort performance",
      "node_offset": 400,
      "difficulty": 3,
      "degree_in": 0,
      "degree_out": 3,
      "degree_centrality": 0.12,
      "pagerank": 0.007355377597456121,
      "betweenness_centrality": 0.0,
      "out-closeness": 0.12683294977380952,
      "component_id": 0,
      "prerequisite_depth": 0,
      "learning_effort": 3.0,
      "educational_importance": 0.020412170586735404,
      "cluster_id": 2,
      "bridge_score": 0.1,
      "concepts": []
    },
    {
      "id": "test:c:5",
      "type": "Chunk",
      "text": "Optimizing quicksort with pivot selection",
      "node_offset": 450,
      "definition": "Advanced quicksort improvements",
      "difficulty": 4,
      "degree_in": 3,
      "degree_out": 2,
      "degree_centrality": 0.2,
      "pagerank": 0.21042895108834062,
      "betweenness_centrality": 0.04666666666666667,
      "out-closeness": 0.06219963702359347,
      "component_id": 0,
      "prerequisite_depth": 1,
      "learning_effort": 7.0,
      "educational_importance": 0.10648003388762987,
      "cluster_id": 1,
      "bridge_score": 0.03266666666666666,
      "concepts": []
    },
    {
      "id": "assessment_final",
      "type": "Assessment",
      "text": "Implement and analyze a hybrid sorting algorithm",
      "node_offset": 500,
      "difficulty": 4,
      "degree_in": 1,
      "degree_out": 2,
      "degree_centrality": 0.12,
      "pagerank": 0.009007786961538757,
      "betweenness_centrality": 0.015000000000000001,
      "out-closeness": 0.07400654859354071,
      "component_id": 0,
      "prerequisite_depth": 0,
      "learning_effort": 4.0,
      "educational_importance": 0.020412170586735404,
      "cluster_id": 1,
      "bridge_score": 0.1105,
      "concepts": []
    },
    {
      "id": "test:c:6",
      "type": "Chunk",
      "text": "Big O notation for complexity analysis",
      "node_offset": 550,
      "definition": "Mathematical notation for algorithm complexity",
      "difficulty": 2,
      "degree_in": 1,
      "degree_out": 1,
      "degree_centrality": 0.08,
      "pagerank": 0.008654509306453468,
      "betweenness_centrality": 0.0033333333333333335,
      "out-closeness": 0.028465116279069766,
      "component_id": 0,
      "prerequisite_depth": 1,
      "learning_effort": 3.0,
      "educational_importance": 0.024377908548303205,
      "cluster_id": 0,
      "bridge_score": 0.0023333333333333335,
      "concepts": [
        "concept_bigO"
      ]
    },
    {
      "id": "concept_bigO",
      "type": "Concept",
      "text": "Big O Notation",
      "node_offset": 600,
      "definition": "Upper bound of algorithm growth rate",
      "degree_in": 1,
      "degree_out": 1,
      "degree_centrality": 0.08,
      "pagerank": 0.014711711015840966,
      "betweenness_centrality": 0.0033333333333333335,
      "out-closeness": 0.034,
      "component_id": 0,
      "prerequisite_depth": 0,
      "learning_effort": 3.0,
      "educational_importance": 0.020412170586735404,
      "cluster_id": 0,
      "bridge_score": 0.0023333333333333335,
      "concepts": []
    },
    {
      "id": "test:c:7",
      "type": "Chunk",
      "text": "Merge sort implementation and analysis",
      "node_offset": 650,
      "definition": "Stable divide-and-conquer sorting algorithm",
      "difficulty": 3,
      "degree_in": 2,
      "degree_out": 3,
      "degree_centrality": 0.2,
      "pagerank": 0.012665577701892064,
      "betweenness_centrality": 0.016666666666666666,
      "out-closeness": 0.10679429483914352,
      "component_id": 0,
      "prerequisite_depth": 2,
      "learning_effort": 8.0,
      "educational_importance": 0.03794056737936913,
      "cluster_id": 2,
      "bridge_score": 0.07166666666666668,
      "concepts": [
        "concept_divconquer"
      ]
    },
    {
      "id": "test:c:8",
      "type": "Chunk",
      "text": "Heap sort using binary heap",
      "node_offset": 700,
      "definition": "In-place sorting using heap data structure",
      "difficulty": 3,
      "degree_in": 2,
      "degree_out": 1,
      "degree_centrality": 0.12,
      "pagerank": 0.014368460438571894,
      "betweenness_centrality": 0.035,
      "out-closeness": 0.06071944893273238,
      "component_id": 0,
      "prerequisite_depth": 2,
      "learning_effort": 8.0,
      "educational_importance": 0.03162773548858651,
      "cluster_id": 2,
      "bridge_score": 0.1245,
      "concepts": [
        "concept_heap"
      ]
    },
    {
      "id": "concept_heap",
      "type": "Concept",
      "text": "Binary Heap",
      "node_offset": 750,
      "definition": "Complete binary tree with heap property",
      "degree_in": 1,
      "degree_out": 1,
      "degree_centrality": 0.08,
      "pagerank": 0.019568570258242608,
      "betweenness_centrality": 0.04166666666666667,
      "out-closeness": 0.07062400781536207,
      "component_id": 0,
      "prerequisite_depth": 0,
      "learning_effort": 3.0,
      "educational_importance": 0.020412170586735404,
      "cluster_id": 3,
      "bridge_score": 0.1791666666666667,
      "concepts": []
    },
    {
      "id": "test:c:9",
      "type": "Chunk",
      "text": "Introduction to searching algorithms",
      "node_offset": 800,
      "definition": "Finding elements in data structures",
      "difficulty": 1,
      "degree_in": 1,
      "degree_out": 1,
      "degree_centrality": 0.08,
      "pagerank": 0.008735705038265804,
      "betweenness_centrality": 0.0033333333333333335,
      "out-closeness": 0.054876790830945564,
      "component_id": 0,
      "prerequisite_depth": 1,
      "learning_effort": 2.0,
      "educational_importance": 0.024625767170901192,
      "cluster_id": 0,
      "bridge_score": 0.0023333333333333335,
      "concepts": []
    },
    {
      "id": "test:c:10",
      "type": "Chunk",
      "text": "Binary search in sorted arrays",
      "node_offset": 850,
      "definition": "Logarithmic search by dividing in half",
      "difficulty": 2,
      "degree_in": 1,
      "degree_out": 2,
      "degree_centrality": 0.12,
      "pagerank": 0.014780727395143162,
      "betweenness_centrality": 0.013333333333333334,
      "out-closeness": 0.05190530973451327,
      "component_id": 0,
      "prerequisite_depth": 2,
      "learning_effort": 4.0,
      "educational_importance": 0.04134380791597061,
      "cluster_id": 0,
      "bridge_score": 0.20933333333333334,
      "concepts": [
        "concept_divconquer"
      ]
    },
    {
      "id": "concept_divconquer",
      "type": "Concept",
      "text": "Divide and Conquer",
      "node_offset": 900,
      "definition": "Breaking problem into smaller subproblems",
      "degree_in": 2,
      "degree_out": 1,
      "degree_centrality": 0.12,
      "pagerank": 0.016247064159566685,
      "betweenness_centrality": 0.016666666666666666,
      "out-closeness": 0.056302916274694276,
      "component_id": 0,
      "prerequisite_depth": 0,
      "learning_effort": 3.0,
      "educational_importance": 0.020412170586735404,
      "cluster_id": 1,
      "bridge_score": 0.21166666666666667,
      "concepts": []
    },
    {
      "id": "assessment_complexity",
      "type": "Assessment",
      "text": "Calculate time complexity of given algorithms",
      "node_offset": 950,
      "difficulty": 2,
      "degree_in": 1,
      "degree_out": 0,
      "degree_centrality": 0.04,
      "pagerank": 0.019860333077624297,
      "betweenness_centrality": 0.0,
      "out-closeness": 0.0,
      "component_id": 0,
      "prerequisite_depth": 1,
      "learning_effort": 5.0,
      "educational_importance": 0.037762274168594526,
      "cluster_id": 0,
      "bridge_score": 0.0,
      "concepts": []
    },
    {
      "id": "test:c:11",
      "type": "Chunk",
      "text": "Basic data structures overview",
      "node_offset": 1000,
      "definition": "Arrays, lists, stacks, and queues",
      "difficulty": 1,
      "degree_in": 1,
      "degree_out": 1,
      "degree_centrality": 0.08,
      "pagerank": 0.008898096501890471,
      "betweenness_centrality": 0.006666666666666667,
      "out-closeness": 0.0753144940747493,
      "component_id": 0,
      "prerequisite_depth": 1,
      "learning_effort": 2.0,
      "educational_importance": 0.025121484416097167,
      "cluster_id": 0,
      "bridge_score": 0.1546666666666667,
      "concepts": []
    },
    {
      "id": "test:c:12",
      "type": "Chunk",
      "text": "Introduction to tree data structures",
      "node_offset": 1050,
      "definition": "Hierarchical data organization",
      "difficulty": 2,
      "degree_in": 2,
      "degree_out": 2,
      "degree_centrality": 0.16,
      "pagerank": 0.03155204710346476,
      "betweenness_centrality": 0.065,
      "out-closeness": 0.07752969121140142,
      "component_id": 0,
      "prerequisite_depth": 2,
      "learning_effort": 5.0,
      "educational_importance": 0.05911526840928573,
      "cluster_id": 3,
      "bridge_score": 0.12050000000000001,
      "concepts": [
        "concept_tree"
      ]
    },
    {
      "id": "concept_tree",
      "type": "Concept",
      "text": "Tree Structure",
      "node_offset": 1100,
      "definition": "Connected acyclic graph with root",
      "degree_in": 1,
      "degree_out": 1,
      "degree_centrality": 0.08,
      "pagerank": 0.01767047158560329,
      "betweenness_centrality": 0.013333333333333334,
      "out-closeness": 0.034,
      "component_id": 0,
      "prerequisite_depth": 0,
      "learning_effort": 3.0,
      "educational_importance": 0.020412170586735404,
      "cluster_id": 3,
      "bridge_score": 0.009333333333333334,
      "concepts": []
    },
    {
      "id": "test:c:13",
      "type": "Chunk",
      "text": "Graph algorithms and traversal",
      "node_offset": 1150,
      "definition": "Working with graph data structures",
      "difficulty": 3,
      "degree_in": 1,
      "degree_out": 2,
      "degree_centrality": 0.12,
      "pagerank": 0.023859527978491592,
      "betweenness_centrality": 0.035,
      "out-closeness": 0.04915662650602409,
      "component_id": 0,
      "prerequisite_depth": 3,
      "learning_effort": 8.0,
      "educational_importance": 0.07065992148592827,
      "cluster_id": 3,
      "bridge_score": 0.2245,
      "concepts": [
        "concept_recursion"
      ]
    },
    {
      "id": "assessment_trees",
      "type": "Assessment",
      "text": "Implement binary search tree operations",
      "node_offset": 1200,
      "difficulty": 3,
      "degree_in": 2,
      "degree_out": 0,
      "degree_centrality": 0.08,
      "pagerank": 0.028657090921193312,
      "betweenness_centrality": 0.0,
      "out-closeness": 0.0,
      "component_id": 0,
      "prerequisite_depth": 1,
      "learning_effort": 6.0,
      "educational_importance": 0.037762274168594526,
      "cluster_id": 3,
      "bridge_score": 0.15000000000000002,
      "concepts": []
    },
    {
      "id": "test:c:14",
      "type": "Chunk",
      "text": "Dynamic programming fundamentals",
      "node_offset": 1250,
      "definition": "Solving problems by breaking into subproblems",
      "difficulty": 4,
      "degree_in": 3,
      "degree_out": 1,
      "degree_centrality": 0.16,
      "pagerank": 0.10389335721846273,
      "betweenness_centrality": 0.03333333333333333,
      "out-closeness": 0.037251005925817544,
      "component_id": 0,
      "prerequisite_depth": 2,
      "learning_effort": 11.0,
      "educational_importance": 0.11905474963894576,
      "cluster_id": 1,
      "bridge_score": 0.09833333333333334,
      "concepts": [
        "concept_memoization"
      ]
    },
    {
      "id": "concept_memoization",
      "type": "Concept",
      "text": "Memoization",
      "node_offset": 1300,
      "definition": "Caching computed results for reuse",
      "degree_in": 1,
      "degree_out": 1,
      "degree_centrality": 0.08,
      "pagerank": 0.09566135758790079,
      "betweenness_centrality": 0.006666666666666667,
      "out-closeness": 0.05116361992119372,
      "component_id": 0,
      "prerequisite_depth": 0,
      "learning_effort": 3.0,
      "educational_importance": 0.020412170586735404,
      "cluster_id": 1,
      "bridge_score": 0.004666666666666667,
      "concepts": []
    }
  ],
  "edges": [
    {
      "source": "test:c:1",
      "target": "concept_complexity",
      "type": "MENTIONS",
      "weight": 0.35,
      "inverse_weight": 2.857142857142857,
      "is_inter_cluster_edge": true,
      "source_cluster_id": 0,
      "target_cluster_id": 2
    },
    {
      "source": "test:c:1",
      "target": "test:c:2",
      "type": "PREREQUISITE",
      "weight": 0.9,
      "inverse_weight": 1.1111111111111112,
      "is_inter_cluster_edge": true,
      "source_cluster_id": 0,
      "target_cluster_id": 2
    },
    {
      "source": "concept_complexity",
      "target": "test:c:2",
      "type": "PREREQUISITE",
      "weight": 0.85,
      "inverse_weight": 1.1764705882352942,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:2",
      "target": "concept_sorting",
      "type": "MENTIONS",
      "weight": 0.4,
      "inverse_weight": 2.5,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:2",
      "target": "test:c:3",
      "type": "PREREQUISITE",
      "weight": 0.85,
      "inverse_weight": 1.1764705882352942,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:3",
      "target": "test:c:4",
      "type": "PARALLEL",
      "weight": 0.6,
      "inverse_weight": 1.6666666666666667,
      "is_inter_cluster_edge": true,
      "source_cluster_id": 2,
      "target_cluster_id": 1
    },
    {
      "source": "concept_sorting",
      "target": "test:c:3",
      "type": "ELABORATES",
      "weight": 0.65,
      "inverse_weight": 1.5384615384615383,
      "is_inter_cluster_edge": false
    },
    {
      "source": "concept_sorting",
      "target": "test:c:4",
      "type": "ELABORATES",
      "weight": 0.7,
      "inverse_weight": 1.4285714285714286,
      "is_inter_cluster_edge": true,
      "source_cluster_id": 2,
      "target_cluster_id": 1
    },
    {
      "source": "test:c:4",
      "target": "concept_recursion",
      "type": "MENTIONS",
      "weight": 0.35,
      "inverse_weight": 2.857142857142857,
      "is_inter_cluster_edge": false
    },
    {
      "source": "assessment_sorting",
      "target": "test:c:3",
      "type": "TESTS",
      "weight": 0.9,
      "inverse_weight": 1.1111111111111112,
      "is_inter_cluster_edge": false
    },
    {
      "source": "assessment_sorting",
      "target": "test:c:4",
      "type": "TESTS",
      "weight": 0.9,
      "inverse_weight": 1.1111111111111112,
      "is_inter_cluster_edge": true,
      "source_cluster_id": 2,
      "target_cluster_id": 1
    },
    {
      "source": "test:c:4",
      "target": "test:c:5",
      "type": "PREREQUISITE",
      "weight": 0.95,
      "inverse_weight": 1.0526315789473684,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:5",
      "target": "test:c:4",
      "type": "REVISION_OF",
      "weight": 0.85,
      "inverse_weight": 1.1764705882352942,
      "is_inter_cluster_edge": false
    },
    {
      "source": "concept_recursion",
      "target": "test:c:5",
      "type": "PREREQUISITE",
      "weight": 0.8,
      "inverse_weight": 1.25,
      "is_inter_cluster_edge": false
    },
    {
      "source": "assessment_final",
      "target": "test:c:5",
      "type": "TESTS",
      "weight": 0.85,
      "inverse_weight": 1.1764705882352942,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:2",
      "target": "assessment_final",
      "type": "HINT_FORWARD",
      "weight": 0.4,
      "inverse_weight": 2.5,
      "is_inter_cluster_edge": true,
      "source_cluster_id": 2,
      "target_cluster_id": 1
    },
    {
      "source": "test:c:1",
      "target": "test:c:6",
      "type": "PREREQUISITE",
      "weight": 0.8,
      "inverse_weight": 1.25,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:6",
      "target": "concept_bigO",
      "type": "MENTIONS",
      "weight": 0.45,
      "inverse_weight": 2.2222222222222223,
      "is_inter_cluster_edge": false
    },
    {
      "source": "concept_bigO",
      "target": "assessment_complexity",
      "type": "PREREQUISITE",
      "weight": 0.85,
      "inverse_weight": 1.1764705882352942,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:2",
      "target": "test:c:7",
      "type": "PREREQUISITE",
      "weight": 0.8,
      "inverse_weight": 1.25,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:7",
      "target": "concept_divconquer",
      "type": "MENTIONS",
      "weight": 0.4,
      "inverse_weight": 2.5,
      "is_inter_cluster_edge": true,
      "source_cluster_id": 2,
      "target_cluster_id": 1
    },
    {
      "source": "concept_divconquer",
      "target": "test:c:4",
      "type": "ELABORATES",
      "weight": 0.75,
      "inverse_weight": 1.3333333333333333,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:2",
      "target": "test:c:8",
      "type": "PREREQUISITE",
      "weight": 0.75,
      "inverse_weight": 1.3333333333333333,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:8",
      "target": "concept_heap",
      "type": "MENTIONS",
      "weight": 0.5,
      "inverse_weight": 2.0,
      "is_inter_cluster_edge": true,
      "source_cluster_id": 2,
      "target_cluster_id": 3
    },
    {
      "source": "concept_heap",
      "target": "test:c:12",
      "type": "PREREQUISITE",
      "weight": 0.7,
      "inverse_weight": 1.4285714285714286,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:1",
      "target": "test:c:9",
      "type": "PREREQUISITE",
      "weight": 0.85,
      "inverse_weight": 1.1764705882352942,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:9",
      "target": "test:c:10",
      "type": "PREREQUISITE",
      "weight": 0.9,
      "inverse_weight": 1.1111111111111112,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:10",
      "target": "concept_divconquer",
      "type": "MENTIONS",
      "weight": 0.35,
      "inverse_weight": 2.857142857142857,
      "is_inter_cluster_edge": true,
      "source_cluster_id": 0,
      "target_cluster_id": 1
    },
    {
      "source": "test:c:7",
      "target": "test:c:3",
      "type": "PARALLEL",
      "weight": 0.65,
      "inverse_weight": 1.5384615384615383,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:7",
      "target": "test:c:8",
      "type": "PARALLEL",
      "weight": 0.6,
      "inverse_weight": 1.6666666666666667,
      "is_inter_cluster_edge": false
    },
    {
      "source": "assessment_sorting",
      "target": "test:c:7",
      "type": "TESTS",
      "weight": 0.85,
      "inverse_weight": 1.1764705882352942,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:1",
      "target": "test:c:11",
      "type": "PREREQUISITE",
      "weight": 0.95,
      "inverse_weight": 1.0526315789473684,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:11",
      "target": "test:c:12",
      "type": "PREREQUISITE",
      "weight": 0.9,
      "inverse_weight": 1.1111111111111112,
      "is_inter_cluster_edge": true,
      "source_cluster_id": 0,
      "target_cluster_id": 3
    },
    {
      "source": "test:c:12",
      "target": "concept_tree",
      "type": "MENTIONS",
      "weight": 0.5,
      "inverse_weight": 2.0,
      "is_inter_cluster_edge": false
    },
    {
      "source": "concept_tree",
      "target": "assessment_trees",
      "type": "PREREQUISITE",
      "weight": 0.85,
      "inverse_weight": 1.1764705882352942,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:12",
      "target": "test:c:13",
      "type": "PREREQUISITE",
      "weight": 0.8,
      "inverse_weight": 1.25,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:13",
      "target": "concept_recursion",
      "type": "MENTIONS",
      "weight": 0.3,
      "inverse_weight": 3.3333333333333335,
      "is_inter_cluster_edge": true,
      "source_cluster_id": 3,
      "target_cluster_id": 1
    },
    {
      "source": "test:c:5",
      "target": "test:c:14",
      "type": "PREREQUISITE",
      "weight": 0.7,
      "inverse_weight": 1.4285714285714286,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:14",
      "target": "concept_memoization",
      "type": "MENTIONS",
      "weight": 0.45,
      "inverse_weight": 2.2222222222222223,
      "is_inter_cluster_edge": false
    },
    {
      "source": "concept_memoization",
      "target": "concept_recursion",
      "type": "EXAMPLE_OF",
      "weight": 0.65,
      "inverse_weight": 1.5384615384615383,
      "is_inter_cluster_edge": false
    },
    {
      "source": "assessment_final",
      "target": "test:c:14",
      "type": "TESTS",
      "weight": 0.75,
      "inverse_weight": 1.3333333333333333,
      "is_inter_cluster_edge": false
    },
    {
      "source": "test:c:10",
      "target": "assessment_trees",
      "type": "HINT_FORWARD",
      "weight": 0.35,
      "inverse_weight": 2.857142857142857,
      "is_inter_cluster_edge": true,
      "source_cluster_id": 0,
      "target_cluster_id": 3
    },
    {
      "source": "test:c:13",
      "target": "test:c:14",
      "type": "REFER_BACK",
      "weight": 0.45,
      "inverse_weight": 2.2222222222222223,
      "is_inter_cluster_edge": true,
      "source_cluster_id": 3,
      "target_cluster_id": 1
    }
  ],
  "_meta": {
    "demo_path": [
      "assessment_complexity",
      "chunk_optimization",
      "chunk_bubble",
      "chunk_trees"
    ],
    "demo_generation_config": {
      "strategy": 2,
      "strategy_name": "showcase",
      "max_nodes": 100,
      "actual_nodes": 4
    },
    "course_sequence": [
      {
        "id": "test:c:1",
        "cluster_id": 0,
        "position": 1
      },
      {
        "id": "test:c:2",
        "cluster_id": 2,
        "position": 2
      },
      {
        "id": "test:c:3",
        "cluster_id": 2,
        "position": 3
      },
      {
        "id": "test:c:4",
        "cluster_id": 1,
        "position": 4
      },
      {
        "id": "test:c:5",
        "cluster_id": 1,
        "position": 5
      },
      {
        "id": "test:c:6",
        "cluster_id": 0,
        "position": 6
      },
      {
        "id": "test:c:7",
        "cluster_id": 2,
        "position": 7
      },
      {
        "id": "test:c:8",
        "cluster_id": 2,
        "position": 8
      },
      {
        "id": "test:c:9",
        "cluster_id": 0,
        "position": 9
      },
      {
        "id": "test:c:10",
        "cluster_id": 0,
        "position": 10
      },
      {
        "id": "test:c:11",
        "cluster_id": 0,
        "position": 11
      },
      {
        "id": "test:c:12",
        "cluster_id": 3,
        "position": 12
      },
      {
        "id": "test:c:13",
        "cluster_id": 3,
        "position": 13
      },
      {
        "id": "test:c:14",
        "cluster_id": 1,
        "position": 14
      }
    ]
  }
}